import streamlit as st
import sys
import os

sys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))
from utils_v2.predictor_v2 import predict_default 
from utils_v2.logger import log_input

st.set_page_config(page_title="üí≥ Credit Checker", layout="centered")

st.title("Kaspi-like –ö—Ä–µ–¥–∏—Ç–Ω—ã–π –°–∫–æ—Ä–∏–Ω–≥ üí∏")
st.write("–í–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –∫–ª–∏–µ–Ω—Ç–∞, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å ‚Äî –æ–¥–æ–±—Ä–µ–Ω –ª–∏ –∫—Ä–µ–¥–∏—Ç.")

# üéõ –í–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö
age = st.slider("–í–æ–∑—Ä–∞—Å—Ç", 18, 65, 30)
gender = st.selectbox("–ü–æ–ª", ["–ú—É–∂—á–∏–Ω–∞", "–ñ–µ–Ω—â–∏–Ω–∞"])
marital_status = st.selectbox("–°–µ–º–µ–π–Ω–æ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ", ["–ù–µ –∂–µ–Ω–∞—Ç/–Ω–µ –∑–∞–º—É–∂–µ–º", "–ñ–µ–Ω–∞—Ç/–ó–∞–º—É–∂–µ–º"])

income = st.number_input("–£—Ä–æ–≤–µ–Ω—å –¥–æ—Ö–æ–¥–∞ (‚Ç∏)", min_value=0, step=10000, value=250000)

spouse_income = 0
if marital_status == "–ñ–µ–Ω–∞—Ç/–ó–∞–º—É–∂–µ–º":
    spouse_income = st.number_input("–î–æ—Ö–æ–¥ —Å—É–ø—Ä—É–≥–∞/—Å—É–ø—Ä—É–≥–∏ (‚Ç∏)", min_value=0, step=10000, value=0)

experience = st.slider("–°—Ç–∞–∂ —Ä–∞–±–æ—Ç—ã (–ª–µ—Ç)", 0, 40, 5)
children = st.selectbox("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–µ—Ç–µ–π", [0, 1, 2, 3])
employment_type = st.selectbox("–¢–∏–ø –∑–∞–Ω—è—Ç–æ—Å—Ç–∏", ["–°–æ—Ç—Ä—É–¥–Ω–∏–∫", "–§—Ä–∏–ª–∞–Ω—Å–µ—Ä", "–ë–µ–∑—Ä–∞–±–æ—Ç–Ω—ã–π"])
housing = st.selectbox("–¢–∏–ø –∂–∏–ª—å—è", ["–°–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–µ", "–ê—Ä–µ–Ω–¥–∞"])
mortgage = st.radio("–ï—Å—Ç—å –ª–∏ –∏–ø–æ—Ç–µ–∫–∞?", [0, 1], format_func=lambda x: "–î–∞" if x == 1 else "–ù–µ—Ç")
car = st.radio("–ï—Å—Ç—å –ª–∏ –∞–≤—Ç–æ–º–æ–±–∏–ª—å?", [0, 1], format_func=lambda x: "–î–∞" if x == 1 else "–ù–µ—Ç")
credit_history = st.selectbox("–ö—Ä–µ–¥–∏—Ç–Ω–∞—è –∏—Å—Ç–æ—Ä–∏—è", ["–•–æ—Ä–æ—à–∞—è", "–ü–ª–æ—Ö–∞—è" , "–ù–µ—Ç"])
education = st.selectbox("–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ", ["–°—Ä–µ–¥–Ω–µ–µ", "–í—ã—Å—à–µ–µ", "–ú–∞–≥–∏—Å—Ç—Ä–∞—Ç—É—Ä–∞", "–î—Ä—É–≥–æ–µ"])
region = st.selectbox("–†–µ–≥–∏–æ–Ω –ø—Ä–æ–∂–∏–≤–∞–Ω–∏—è", ["–ê–ª–º–∞—Ç—ã", "–ê—Å—Ç–∞–Ω–∞", "–®—ã–º–∫–µ–Ω—Ç", "–î—Ä—É–≥–æ–π"])
current_loans = st.slider("–¢–µ–∫—É—â–∏–µ –∫—Ä–µ–¥–∏—Ç—ã", 0, 5, 0)
loan_amount = st.number_input("–ñ–µ–ª–∞–µ–º–∞—è —Å—É–º–º–∞ –∫—Ä–µ–¥–∏—Ç–∞ (‚Ç∏)", min_value=10000, max_value=2000000, step=10000, value=500000)
loan_term_months = st.selectbox("–°—Ä–æ–∫ –∫—Ä–µ–¥–∏—Ç–∞ (–≤ –º–µ—Å—è—Ü–∞—Ö)", [6, 12, 24, 36, 48, 60], index=2)


# üë∂ –£—á—ë—Ç –¥–µ—Ç–µ–π: –æ—Ç–Ω–∏–º–∞–µ–º 30,000 –∑–∞ –∫–∞–∂–¥–æ–≥–æ
adjusted_income = income + spouse_income - (children * 30000)

# üì¶ –°–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö
user_input = {
    "Age": age,
    "Gender": gender,
    "Income": adjusted_income,
    "Work_experience": experience,
    "Children": children,
    "Has_mortgage": mortgage,
    "Has_car": car,
    "Credit_history": credit_history,
    "Education": education,
    "Region": region,
    "Current_loans": current_loans,
    "Marital_status": marital_status,
    "Spouse_income": spouse_income,
    "Employment_type": employment_type,
    "Housing_type": housing,
    "Loan_amount": loan_amount,
    "Loan_term_months": loan_term_months
}

# üîç –ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ
if st.button("–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ä–µ—à–µ–Ω–∏–µ"):
    result = predict_default(user_input)
    log_input(user_input, result)

    if result == 1:
        st.success("‚úÖ –ö—Ä–µ–¥–∏—Ç –æ–¥–æ–±—Ä–µ–Ω!")
    else:
        st.error("‚ùå –ö—Ä–µ–¥–∏—Ç –æ—Ç–∫–ª–æ–Ω—ë–Ω.")
